C51 COMPILER V9.54   AT24C02                                                               09/24/2022 10:35:54 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE AT24C02
OBJECT MODULE PLACED IN .\Objects\AT24C02.obj
COMPILER INVOKED BY: C:\Keil_v5_C51\C51\BIN\C51.EXE AT24C02.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\AT24C02.lst) TABS(2) OBJECT(.\Objects\AT24C02.obj)

line level    source

   1          #include <STC89C5xRC.H>
   2          
   3          #define AT24C02_ADDRESS  0XA0
   4          
   5          
   6          sbit I2C_SCL=P2^1;
   7          sbit I2C_SDA=P2^0;
   8          
   9          void I2C_Start()
  10          {
  11   1        I2C_SDA=1;
  12   1        I2C_SCL=1;
  13   1        I2C_SDA=0;
  14   1        I2C_SCL=0;
  15   1      }
  16          
  17          void I2C_Stop()
  18          {
  19   1        I2C_SDA=0;
  20   1        I2C_SCL=1;
  21   1        I2C_SDA=1;
  22   1      }
  23          
  24          void I2C_SendByte(unsigned char Byte)
  25          {
  26   1        unsigned char i;
  27   1        for(i=0;i<8;i++)
  28   1        {
  29   2          I2C_SDA=Byte&(0X80>>i);
  30   2          I2C_SCL=1;
  31   2          I2C_SCL=0;
  32   2        }
  33   1      }
  34          
  35          unsigned char I2C_ReceiveByte()
  36          {
  37   1        unsigned char Byte=0x00,i;
  38   1        for(i=0;i<8;i++)
  39   1        {
  40   2          I2C_SCL=1;
  41   2          if(I2C_SDA){Byte|=(0x80>>i);}
  42   2          I2C_SCL=0;
  43   2        }
  44   1        return Byte;
  45   1      }
  46          
  47          /*
  48          
  49          º¯ÊýÃû³Æ£ºI2C·¢ËÍÓ¦´ð
  50          ²ÎÊý£ºÓ¦´ðÎ» AckBit   0ÎªÓ¦´ð£¬1Îª·ÇÓ¦´ð
  51          ·µ»ØÖµ£ºÎÞ
  52          
  53          */
  54          void I2C_SendAck(unsigned char AckBit)
C51 COMPILER V9.54   AT24C02                                                               09/24/2022 10:35:54 PAGE 2   

  55          {
  56   1        I2C_SDA=AckBit;
  57   1        I2C_SCL=1;
  58   1        I2C_SCL=0;
  59   1      }
  60          
  61          /*
  62          
  63          º¯ÊýÃû³Æ£ºI2C½ÓÊÕÓ¦´ðº
  64          ²ÎÊý£ºÎÞ
  65          ·µ»ØÖµ£º½ÓÊÕµ½µÄÓ¦´ðÎ»£¬0ÎªÓ¦´ð£¬1Îª·ÇÓ¦´ð
  66          
  67          */
  68          unsigned char I2C_ReceiveAck()
  69          {
  70   1        unsigned char AckBit;
  71   1        I2C_SDA=1;
  72   1        I2C_SCL=1;
  73   1        AckBit=I2C_SDA;
  74   1        I2C_SCL=0;
  75   1        return AckBit;
  76   1      }
  77          
  78          
  79          
  80          
  81          void AT24C02_WriteByte(unsigned char WordAddress,Data)//WORDADDRESS :0-255
  82          {
  83   1        I2C_Start();
  84   1        I2C_SendByte(AT24C02_ADDRESS);
  85   1        I2C_ReceiveAck();
  86   1        I2C_SendByte(WordAddress);
  87   1        I2C_ReceiveAck();
  88   1        I2C_SendByte(Data);
  89   1        I2C_ReceiveAck();
  90   1        I2C_Stop();
  91   1      }
  92          
  93          unsigned char AT24C02_ReadByte(unsigned char WordAddress)
  94          {
  95   1        unsigned char Data;
  96   1        
  97   1        I2C_Start();
  98   1        I2C_SendByte(AT24C02_ADDRESS);
  99   1        I2C_ReceiveAck();
 100   1        I2C_SendByte(WordAddress);
 101   1        I2C_ReceiveAck();
 102   1        I2C_Start();
 103   1        I2C_SendByte(AT24C02_ADDRESS|0X01);
 104   1        I2C_ReceiveAck();
 105   1        Data=I2C_ReceiveByte();
 106   1        I2C_SendAck(1);
 107   1        I2C_Stop();
 108   1        
 109   1        return Data;
 110   1      }
 111          
 112          //void Delay(unsigned int xms)    //@12.000MHz
 113          //{
 114          //  unsigned char i, j;
 115          //  while(xms--)
 116          //  {
C51 COMPILER V9.54   AT24C02                                                               09/24/2022 10:35:54 PAGE 3   

 117          
 118          //    i = 2;
 119          //    j = 239;
 120          //    do
 121          //    {
 122          //      while (--j);
 123          //    } while (--i);
 124          //  }
 125          //}
 126          
 127          
 128          
 129          
 130          
 131          
 132          
 133          
 134          
 135          
 136          
 137          
 138          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    183    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
